{
	"info": {
		"_postman_id": "c37541ad-b21c-4f32-8abd-8be25ae25049",
		"name": "gr_29",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "the first lesson",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_test_user",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_test_user"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "20",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alex",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/get_method?name=Alina&age=33",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"get_method"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "33"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_1?name=Alina&age=33&weight=63",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_1"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "weight",
							"value": "63"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_2?name=Alina&age=33&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_2"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Alina&age=33&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_6",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alina&age=33&salary=1500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alina"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "1500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"let person = {\r",
							"    \"age\": \"30\",\r",
							"    \"family\": {\r",
							"        \"children\": [[\"Alex\",24],[\"Kate\",12]],\r",
							"        \"u_salary_1_5_year\": 4000\r",
							"    },\r",
							"    \"name\": \"Vadim\",\r",
							"    \"salary\": 1000\r",
							"}\r",
							"\r",
							"let item_1 = \"Alex\"\r",
							"\r",
							"pm.test(\"Item_1 Test\", function () {\r",
							"\r",
							"    pm.expect(item_1).to.deep.equal(\"Alex\")\r",
							"});\r",
							"\r",
							"pm.test(\"item_2 person\", function () {\r",
							"    pm.expect(+person.age).to.deep.equal(30)\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Item_3 person\", function () {\r",
							"    pm.expect(person.family.children[1][1]).to.deep.equal(12)\r",
							"});\r",
							"\r",
							"pm.test(\"Item_4 Person\", function () {\r",
							"    pm.expect(person).to.have.property(\"name\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_5 Person\", function () {\r",
							"    pm.expect(person).to.deep.include({\"salary\": 1000})\r",
							"});\r",
							"\r",
							"pm.test(\"Item_6 Person\", function () {\r",
							"    pm.expect(person.family.children[1]).to.deep.include(\"Kate\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_7 Person\", function () {\r",
							"    pm.expect(person.name).to.be.a(\"String\")\r",
							"});\r",
							"\r",
							"pm.test(\"Item_8 Person\", function () {\r",
							"    pm.expect(person.family.children[0]).to.eql([\"Alex\",24])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "age",
							"value": "33",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						},
						{
							"key": "name",
							"value": "Alina",
							"type": "text"
						},
						{
							"key": "auth_token",
							"value": "/s34lfgbj/Vadim/jjd909/12242kjkWpqc322823r23r3r457271evny",
							"type": "text",
							"disabled": true
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}